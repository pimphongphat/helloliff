{"version":3,"sources":["logo.svg","App.js","use.constructor.js","reportWebVitals.js","index.js"],"names":["liff","window","App","useState","profile","setProfile","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","a","init","liffId","isLoggedIn","login","getProfile","console","log","displayName","userId","pictureUrl","statusMessage","useEffect","className","src","logo","alt","href","target","rel","style","marginTop","onClick","sendMessages","type","text","then","closeWindow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"sOAAe,MAA0B,iC,iBCMnCA,EAAOC,OAAOD,KA0DLE,MAxDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAuBA,OC9Ba,WAA8C,IAAtBC,EAAqB,uDAAV,aAChD,EAA0CH,oBAAS,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KACID,IACJD,IACAE,GAAiB,IDKjBC,CAAc,sBAAC,4BAAAC,EAAA,sEAGPV,EAAKW,KAAK,CAAEC,OAAQ,wBAHb,OAKRZ,EAAKa,cACRb,EAAKc,QAEHV,EAAUJ,EAAKe,aACnBC,QAAQC,IAAIb,GACZC,EAAW,CACPa,YAAcd,EAAQc,YACtBC,OAASf,EAAQe,OACjBC,WAAahB,EAAQgB,WACrBC,cAAgBjB,EAAQiB,gBAdf,4CAkBfC,oBAAS,sBAAC,sBAAAZ,EAAA,0FACP,IAGD,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,SAMGzB,EAAQc,cAEX,qBAAKY,MAAO,CAAEC,UAAW,IAAzB,SACA,wBAAQC,QAAS,WAEfhC,EAAKiC,aAAa,CAAC,CACjBC,KAAM,OACNC,KAAM,qBACJC,MAAK,WACPpC,EAAKqC,kBANT,gCEpCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAQC,SAAUC,aAAlB,SACA,cAAC,EAAD,QAGAC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.1fc23bc9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport useConstructor from \"./use.constructor\";\n\nconst liff = window.liff;\n\nfunction App() {\n  const [profile, setProfile] = useState([]);\n\n  useConstructor(async () => {\n    //liff.init({liffId: \"1655970673-krpZvGxq\"});\n    //https://liff.line.me/1655970673-krpZvGxq\n    await liff.init({ liffId: \"1655970673-krpZvGxq\" });\n    //await liff.init({ liffId: \"1655977698-0KXWzMOG\" });\n    if (!liff.isLoggedIn()) {\n      liff.login();\n    }\n    let profile = liff.getProfile();\n    console.log(profile);\n    setProfile({\n        displayName : profile.displayName,\n        userId : profile.userId,\n        pictureUrl : profile.pictureUrl,\n        statusMessage : profile.statusMessage\n      });\n  });\n\n  useEffect(async () => {\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {profile.displayName}\n        </a>\n        <div style={{ marginTop: 20 }}>\n        <button onClick={() => {\n\n          liff.sendMessages([{\n            type: 'text',\n            text: \"Thank you, Bye!\"\n          }]).then(() => {\n            liff.closeWindow();\n          });\n\n        }}>Close LIFF</button>\n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\r\n\r\nexport default function useConstructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\"   \n\nReactDOM.render(\n  <React.StrictMode>\n  <Router basename={process.env.PUBLIC_URL}>\n  <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}